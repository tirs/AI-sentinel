version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-sentinel-api
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - ai-sentinel-network

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: ai-sentinel-dashboard
    ports:
      - "8501:8501"
    environment:
      - API_HOST=api
      - API_PORT=8000
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - ai-sentinel-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: ai-sentinel-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks:
      - ai-sentinel-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: ai-sentinel-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - ai-sentinel-network

volumes:
  elasticsearch-data:
    driver: local

networks:
  ai-sentinel-network:
    driver: bridge